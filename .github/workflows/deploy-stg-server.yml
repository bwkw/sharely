name: Deploy to ECR

on:
  workflow_dispatch:
  push:
    branches:
      - feature/#46/add-automatic-deploy-when-merged-to-stg-branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS OIDC authentication
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          role-session-name: GitHubActions
          aws-region: ap-northeast-1

      - name: login ECR repository
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "sharely-stg-go-backend-app"
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f infra/docker/server/Dockerfile.stg -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./server
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: logout
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}

#      - name: render new task definition
#        id: render-container
#        uses: aws-actions/amazon-ecs-render-task-definition@v1
#        with:
#          task-definition: node-ecs-task-def.json
#          container-name: sharely-stg-go-container
#          image: ${{ steps.login-ecr.outputs.registry }}/sharely-stg-go-container:${{ github.sha }}
#
#      - name: register new task definition family
#        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#        with:
#          task-definition: ${{ steps.render-container.outputs.task-definition }}
#          cluster: sandcastle
